// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetRecommendationsParams creates a new GetRecommendationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRecommendationsParams() *GetRecommendationsParams {
	return &GetRecommendationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRecommendationsParamsWithTimeout creates a new GetRecommendationsParams object
// with the ability to set a timeout on a request.
func NewGetRecommendationsParamsWithTimeout(timeout time.Duration) *GetRecommendationsParams {
	return &GetRecommendationsParams{
		timeout: timeout,
	}
}

// NewGetRecommendationsParamsWithContext creates a new GetRecommendationsParams object
// with the ability to set a context for a request.
func NewGetRecommendationsParamsWithContext(ctx context.Context) *GetRecommendationsParams {
	return &GetRecommendationsParams{
		Context: ctx,
	}
}

// NewGetRecommendationsParamsWithHTTPClient creates a new GetRecommendationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRecommendationsParamsWithHTTPClient(client *http.Client) *GetRecommendationsParams {
	return &GetRecommendationsParams{
		HTTPClient: client,
	}
}

/* GetRecommendationsParams contains all the parameters to send to the API endpoint
   for the get recommendations operation.

   Typically these are written to a http.Request.
*/
type GetRecommendationsParams struct {

	// Body.
	Body GetRecommendationsBody

	/* RecommenderName.

	   Name of the recommender to use for recommendations. This item should exist in a response to GET /recommenders for the same site id.
	*/
	RecommenderName string

	// SiteID.
	SiteID string

	// XCqClientID.
	XCqClientID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get recommendations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRecommendationsParams) WithDefaults() *GetRecommendationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get recommendations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRecommendationsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get recommendations params
func (o *GetRecommendationsParams) WithTimeout(timeout time.Duration) *GetRecommendationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get recommendations params
func (o *GetRecommendationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get recommendations params
func (o *GetRecommendationsParams) WithContext(ctx context.Context) *GetRecommendationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get recommendations params
func (o *GetRecommendationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get recommendations params
func (o *GetRecommendationsParams) WithHTTPClient(client *http.Client) *GetRecommendationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get recommendations params
func (o *GetRecommendationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the get recommendations params
func (o *GetRecommendationsParams) WithBody(body GetRecommendationsBody) *GetRecommendationsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the get recommendations params
func (o *GetRecommendationsParams) SetBody(body GetRecommendationsBody) {
	o.Body = body
}

// WithRecommenderName adds the recommenderName to the get recommendations params
func (o *GetRecommendationsParams) WithRecommenderName(recommenderName string) *GetRecommendationsParams {
	o.SetRecommenderName(recommenderName)
	return o
}

// SetRecommenderName adds the recommenderName to the get recommendations params
func (o *GetRecommendationsParams) SetRecommenderName(recommenderName string) {
	o.RecommenderName = recommenderName
}

// WithSiteID adds the siteID to the get recommendations params
func (o *GetRecommendationsParams) WithSiteID(siteID string) *GetRecommendationsParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the get recommendations params
func (o *GetRecommendationsParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WithXCqClientID adds the xCqClientID to the get recommendations params
func (o *GetRecommendationsParams) WithXCqClientID(xCqClientID string) *GetRecommendationsParams {
	o.SetXCqClientID(xCqClientID)
	return o
}

// SetXCqClientID adds the xCqClientId to the get recommendations params
func (o *GetRecommendationsParams) SetXCqClientID(xCqClientID string) {
	o.XCqClientID = xCqClientID
}

// WriteToRequest writes these params to a swagger request
func (o *GetRecommendationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param recommenderName
	if err := r.SetPathParam("recommenderName", o.RecommenderName); err != nil {
		return err
	}

	// path param siteId
	if err := r.SetPathParam("siteId", o.SiteID); err != nil {
		return err
	}

	// header param x-cq-client-id
	if err := r.SetHeaderParam("x-cq-client-id", o.XCqClientID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
