// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetZoneRecommendationsParams creates a new GetZoneRecommendationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetZoneRecommendationsParams() *GetZoneRecommendationsParams {
	return &GetZoneRecommendationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetZoneRecommendationsParamsWithTimeout creates a new GetZoneRecommendationsParams object
// with the ability to set a timeout on a request.
func NewGetZoneRecommendationsParamsWithTimeout(timeout time.Duration) *GetZoneRecommendationsParams {
	return &GetZoneRecommendationsParams{
		timeout: timeout,
	}
}

// NewGetZoneRecommendationsParamsWithContext creates a new GetZoneRecommendationsParams object
// with the ability to set a context for a request.
func NewGetZoneRecommendationsParamsWithContext(ctx context.Context) *GetZoneRecommendationsParams {
	return &GetZoneRecommendationsParams{
		Context: ctx,
	}
}

// NewGetZoneRecommendationsParamsWithHTTPClient creates a new GetZoneRecommendationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetZoneRecommendationsParamsWithHTTPClient(client *http.Client) *GetZoneRecommendationsParams {
	return &GetZoneRecommendationsParams{
		HTTPClient: client,
	}
}

/* GetZoneRecommendationsParams contains all the parameters to send to the API endpoint
   for the get zone recommendations operation.

   Typically these are written to a http.Request.
*/
type GetZoneRecommendationsParams struct {

	// Body.
	Body GetZoneRecommendationsBody

	// SiteID.
	SiteID string

	// XCqClientID.
	XCqClientID string

	/* ZoneName.

	   Name of the recommendation zone.
	*/
	ZoneName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get zone recommendations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetZoneRecommendationsParams) WithDefaults() *GetZoneRecommendationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get zone recommendations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetZoneRecommendationsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get zone recommendations params
func (o *GetZoneRecommendationsParams) WithTimeout(timeout time.Duration) *GetZoneRecommendationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get zone recommendations params
func (o *GetZoneRecommendationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get zone recommendations params
func (o *GetZoneRecommendationsParams) WithContext(ctx context.Context) *GetZoneRecommendationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get zone recommendations params
func (o *GetZoneRecommendationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get zone recommendations params
func (o *GetZoneRecommendationsParams) WithHTTPClient(client *http.Client) *GetZoneRecommendationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get zone recommendations params
func (o *GetZoneRecommendationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the get zone recommendations params
func (o *GetZoneRecommendationsParams) WithBody(body GetZoneRecommendationsBody) *GetZoneRecommendationsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the get zone recommendations params
func (o *GetZoneRecommendationsParams) SetBody(body GetZoneRecommendationsBody) {
	o.Body = body
}

// WithSiteID adds the siteID to the get zone recommendations params
func (o *GetZoneRecommendationsParams) WithSiteID(siteID string) *GetZoneRecommendationsParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the get zone recommendations params
func (o *GetZoneRecommendationsParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WithXCqClientID adds the xCqClientID to the get zone recommendations params
func (o *GetZoneRecommendationsParams) WithXCqClientID(xCqClientID string) *GetZoneRecommendationsParams {
	o.SetXCqClientID(xCqClientID)
	return o
}

// SetXCqClientID adds the xCqClientId to the get zone recommendations params
func (o *GetZoneRecommendationsParams) SetXCqClientID(xCqClientID string) {
	o.XCqClientID = xCqClientID
}

// WithZoneName adds the zoneName to the get zone recommendations params
func (o *GetZoneRecommendationsParams) WithZoneName(zoneName string) *GetZoneRecommendationsParams {
	o.SetZoneName(zoneName)
	return o
}

// SetZoneName adds the zoneName to the get zone recommendations params
func (o *GetZoneRecommendationsParams) SetZoneName(zoneName string) {
	o.ZoneName = zoneName
}

// WriteToRequest writes these params to a swagger request
func (o *GetZoneRecommendationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param siteId
	if err := r.SetPathParam("siteId", o.SiteID); err != nil {
		return err
	}

	// header param x-cq-client-id
	if err := r.SetHeaderParam("x-cq-client-id", o.XCqClientID); err != nil {
		return err
	}

	// path param zoneName
	if err := r.SetPathParam("zoneName", o.ZoneName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
